一、变量和类型
java中的变量和C十分相似
变量指的是程序运行时可变的量. 相当于开辟一块内存空间来保存一些数据.
类型则是对变量的种类进行了划分, 不同的类型的变量具有不同的特性.
我们所讨论的 “变量” 主要和我们的 “内存” 这样的硬件设备密切相关。



1、整型变量
基本语法格式：int 变量名 =初始值；
eg: int num=10;
注意事项:

int 表示变量的类型是一个整型
变量名是变量的标识. 后续都是通过这个名字来使用变量
Java 中 = 表示赋值(和数学不一样), 意思是给变量设置一个初始值.
初始化操作是可选的, 但是建议创建变量的时候都显式初始化.
后不要忘记分号, 否则会编译失败.
// 表示注释. 注释作为代码的解释说明部分, 不参与编译运行.
在 Java 中, 一个 int 变量占 4 个字节. 和操作系统没有直接关
下面这个代码可以查看int的取值范围
 System.out.println(Integer.MAX_VALUE);
   // int 的大值 
 System.out.println(Integer.MIN_VALUE);  
   // int 的小系.
1
2
3
4
2、长整型变量
语法格式： long 变量名=初始值；
eg:

long num = 10L; // 定义一个长整型变量, 初始值写作 10l 也可以(小写的 L, 不是数字1). 
System.out.println(num);
1
2
注意事项:

基本语法格式和创建 int 变量基本一致, 只是把类型修改成 long
初始化设定的值为 10L , 表示一个长整型的数字. 10l 也可以.
使用 10 初始化也可以, 10 的类型是 int, 10L 的类型是 long, 使用 10 L 或者 10 l 更好一些.
Java 中 long 类型占 8 个字节. 表示的数据范围 -2^63 -> 2^63-1
使用以下代码查看 Java 中的长整型数据范围:
 System.out.println(Long.MAX_VALUE); 
 System.out.println(Long.MIN_VALUE) ;
1
2
3、双精度浮点型变量
语法格式： double 变量名=初始值；
eg:double num=1.0;
神奇的代码1:

int a = 1; 
int b = 2;
 System.out.println(a / b); 
// 执行结果 0 
1
2
3
4
在 Java 中, int 除以 int 的值仍然是 int(会直接舍弃小数部分).
如果想得到 0.5, 需要使用 double 类型计算.

double a = 1.0; 
double b = 2.0; 
System.out.println(a / b); 
// 执行结果 0.5 
1
2
3
4
代码2：

double num = 1.1;
System.out.println(num * num)；
 // 执行结果 1.2100000000000002 
1
2
3
Java 中的 double 虽然也是 8 个字节, 但是浮点数的内存布局和整数差别很大, 不能单纯的用 2 ^ n 的形式表示数据范围.
Java 的 double 类型的内存布局遵守 IEEE 754 标准(和C语言一样), 尝试使用有限的内存空间表示可能无限的小数, 势 必会存在一定的精度误差.
4、单精度浮点型变量
语法格式：
float 变量名 = 初始值；
eg:

float num = 1.0f;    // 写作 1.0F 也可以 
System.out.println(num);
1
2
ﬂoat 类型在 Java 中占四个字节, 同样遵守 IEEE 754 标准. 由于表示的数据精度范围较小, 一般在工程上用到浮点数都 优先考虑 double, 不太推荐使用 ﬂoat.
5、字符类型变量
语法格式：
char 变量名 = 初始值；
eg: char ch=‘A’;
注意事项:

Java 中使用 单引号 + 单个字母 的形式表示字符字面值.
计算机中的字符本质上是一个整数. 在 C 语言中使用 ASCII 表示字符, 而 Java 中使用 Unicode 表示字符. 因此一 个字符占用两个字节, 表示的字符种类更多, 包括中文.
使用一个字符表示一个汉字:
char ch = '呵';
 System.out.println(ch); 
1
2
执行 javac 的时候可能出现以下错误:
Test.java:3: 错误: 未结束的字符文字
char ch = ‘鍛?’; ^
此时我们在执行 javac 时加上 -encoding UTF-8 选项即可
javac -encoding UTF-8 Test.java
关于字符编码方式的讨论, 参见
https://zhuanlan.zhihu.com/p/35172335
6、字节类型变量
语法格式：
byte 变量名 = 初始值；
eg：

byte value = 0; 
System.out.println(value); 
1
2
注意事项:
3. 字节类型表示的也是整数. 只占一个字节, 表示范围较小 (-128 -> +127 )
2. 字节类型和字符类型互不相干。
3. 7、短整型变量
语法格式：
short 变量名=初始值；
eg:

short value = 0; 
System.out.println(value); 
1
2
注意事项:
short 占用 2 个字节, 表示的数据范围是 -32768 -> +32767
这个表示范围比较小, 一般不推荐使用.
8、布尔类型变量
语法格式：
boolean 变量名 = 初始值；
eg:

boolean value = true; 
System.out.println(value); 
1
2
注意事项:
boolean 类型的变量只有两种取值, true 表示真, false 表示假.
Java 的 boolean 类型和 int 不能相互转换, 不存在 1 表示 true, 0 表示 false 这样的用法.
boolean 类型有些 JVM 的实现是占 1 个字节, 有些是占 1 个比特位, 这个没有明确规定

boolean value = true; 
System.out.println(value + 1); 
// 代码编译会出现如下错误 Test.java:4: 错误: 二元运算符 '+' 的操作数类型错误         System.out.println(value + 1);                                   第一个类型:  boolean   
第二个类型: int 
1 个错误 
1
2
3
4
5
9、字符类型变量（重点）
把一些字符放到一起就构成了字符串
基本语法格式:
String 变量名 = “初始值”;
代码示例:

String name = "zhangsan"; System.out.println(name); 
1
注意事项:

Java 使用 双引号 + 若干字符 的方式表示字符串字面值.
和上面的类型不同, String 不是基本类型, 而是引用类型(后面重点解释).
字符串中的一些特定的不太方便直接表示的字符需要进行转义.
转义字符示例:
// 创建一个字符串 My name is "张三" 
String name = "My name is \"张三\""; 
1
2
10、变量的作用域
也就是该变量能生效的范围, 一般是变量定义所在的代码块

class Test {   
  public static void main(String[] args) {  
         {             int x = 10;             
         System.out.println(x);   // 编译通过;    
              }        
               System.out.println(x);  // 编译失败, 
              找不到变量 x.    
             } 
        } 
1
2
3
4
5
6
7
8
9
11、变量命名规则
硬性指标:

一个变量名只能包含数字, 字母, 下划线
数字不能开头.
变量名是大小写敏感的. 即 num 和 Num 是两个不同的变量.
注意: 虽然语法上也允许使用中文/美元符($)命名变量, 但是 强烈 不推荐这样做
软性指标:
变量命名要具有描述性, 见名知意.
变量名不宜使用拼音(但是不绝对).
变量名的词性推荐使用名词.
变量命名推荐 小驼峰命名法, 当一个变量名由多个单词构成的时候, 除了第一个单词之外, 其他单词首字母都大 写.
小驼峰命名示例:
int maxValue = 100;
String studentName = "张三"; 
1
2
12、常量
上面讨论的都是各种规则的变量, 每种类型的变量也对应着一种相同类型的常量.
常量指的是运行时类型不能发生改变.
常量主要有以下两种体现形式:
字面值常量

10   // int 字面值常量(十进制)
010     // int 字面值常量(八进制) 由数字 0 开头. 010 也就是十进制的
8 0x10    // int 字面值常量(十六进制) 由数字 0x 开头.0x10 也就是十进制的 
10L     // long 字面值常量. 也可以写作 10l (小写的L) 
1.0     // double 字面值常量. 也可以写作 1.0d 或者 
1.5e2   // double 字面值常量. 科学计数法表示. 相当于 1.5 * 10^2 
1.0f    // float 字面值常量, 也可以写作 1.0F
true    // boolen 字面值常量, 同样的还有 false 
'a'     // char 字面值常量, 单引号中只能有一个字符
abc"   // String 字面值常量, 双引号中可以有多个字符. 
1
2
3
4
5
6
7
8
9
10
final关键字修饰的变量。会将这个常量转换成变量