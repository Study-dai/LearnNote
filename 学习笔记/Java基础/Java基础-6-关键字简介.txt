java中的关键字
1、用于定义访问权限控制的关键字
private 私有的
default 默认值 （这个一般不写）
protected 保护的
public 共有的


2、用于定义类，函数，变量修饰符的关键字
abstract 抽象类
interface 接口

final 不可更改的
被final修饰的变量变为常量（类似于C中的const），被final修饰的类不能被继承
static 静态的
1、修饰属性
当一个成变变量被static修饰之后，这个变量就独立于对象之外和类相关，和对象无关，无论类存在多少个对象，静态成员变量只存在一份。
java静态属性和类先关，和对象无关，但是对象可以通过点操作来访问静态属性，换句话说，同一个类的不同对象共用一个静态属性。

class TestDemo{
     public int a;
     public static int count;
     } 
 
public class Main{
       public static void main(String[] args) {         
       TestDemo t1 = new TestDemo();
       t1.a++;
       TestDemo.count++;  
      System.out.println(t1.a);
      System.out.println(TestDemo.count);         System.out.println("============");  
      TestDemo t2 = new TestDemo();
       t2.a++;
      TestDemo.count++;
      System.out.println(t2.a);   
      System.out.println(TestDemo.count);
      }
} 
输出结果为：
1
1
============ 
1
2 
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
分析：count被static修饰，所有类共享，且不属于对象，访问方式为 ：类名.属性

2、修饰方法
如果在任何方法上应用 static 关键字，此方法称为静态方法。
静态方法属于类，而不属于类的对象。
可以直接调用静态方法，而无需创建类的实例。 静态方法可以访问静态数据成员，并可以更改静态数据成员的值

 class TestDemo{
 public int a;
 public static int count;
 public static void change() {
 count = 100; 
 //a = 10; error  不可以访问非静态数据成员
       }
 } 
public class Main{
public static void main(String[] args) {         
TestDemo.change()；//无需创建实例对象 就可以调用 
System.out.println(TestDemo.count);
      }
} 
//输出结果：
//100
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
注意事项1:
静态方法和实例无关, 而是和类相关. 因此这导致了两个情况:
1·静态方法不能直接使用非静态数据成员或调用非静态方法(非静态数据成员和方法都是和实例相关的).
2、this和super两个关键字不能在静态上下文中使用(this 是当前实例的引用, super是当前实例父类实例的引用, 也 是和当前实例相关).
注意事项2 ：
我们曾经写的方法为了简单, 都统一加上了 static. 但实际上一个方法具体要不要带 static, 都需要是情形而定. main 方法为 static 方法.

3、修饰代码块
4、修饰类
synchrorized 同步的
3、用于定义类与类之间关系的关键字
extends 继承
当一个子类继承父类时候，要给子类加上这个关键字。
implements 工具

4、用于定义建立实例及引用实例，判断实例的关键字
new 新的
创建一个新的对象时使用
this 这个
表示当前对象的引用（注意不是当前对象），可以借助this来访问兑现的字段和方法
super 上级的 超级的
调用父类的成员属性或者方法的时候使用

instanceof 实例
5、用于异常处理的关键字
try 尝试
catch 赶上
finally 最后 终于
throw 投掷
throws 曲拐

6、用于包的关键字
package 包
import 进口 输入

7、其他修饰符关键字
native 自然地
strictfp 严格地
transient 短暂地
volatile 不稳定的
assert 维护
要注意的是：编写代码的时候，保证变量名称与关键字不能重复
