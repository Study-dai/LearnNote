数组基本用法
1、什么是数组
数组本质上就是让我们能 “批量” 创建相同类型的变量
例如:
如果需要表示两个数据, 那么直接创建两个变量即可 int a; int b
如果需要表示五个数据, 那么可以创建五个变量 int a1; int a2; int a3; int a4; int a5;
但是如果需要表示一万个数据, 那么就不能创建一万个变量了. 这时候就需要使用数组, 帮我们批量创建.
注意：在java中，数组中包含的变量必须是相同类型。
2、创建数组
基本语法：

// 动态初始化
数据类型[] 数组名称 = new 数据类型 [长度] { 初始化数据 };
// 静态初始化
数据类型[] 数组名称 = { 初始化数据 };

代码示例：
int[] arr = new int[3]{1, 2, 3};
int[] arr = {1, 2, 3}; 
1
2
3
4
5
6
7
8
**注意：**静态初始化的时候，数组元素个数和初始化数据的格式是一致的。
3、数组的引用
代码示例: 获取长度 & 访问元素

int[] arr = {1, 2, 3};
// 获取数组长度
System.out.println("length: " + arr.length); // 执行结果: 3
// 访问数组中的元素 
System.out.println(arr[1]);        // 执行结果: 2 System.out.println(arr[0]);      // 执行结果: 1
arr[2] = 100; 
System.out.println(arr[2]);        // 执行结果: 100
1
2
3
4
5
6
7
注意事项
使用 arr.length 能够获取到数组的长度. . 这个操作为成员访问操作符. 后面在面向对象中会经常用到.
使用 [ ] 按下标取数组元素. 需要注意, 下标从 0 开始计数
使用 [ ] 操作既能读取数据, 也能修改数据.
下标访问操作不能超出有效范围 [0, length - 1] , 如果超出有效范围, 会出现下标越界异常
代码示例：数组下标越界

int [ ] arr={1,2,3};
System.out.println(arr[100]);
//执行结果
 Exception in thread "main" java.lang.ArrayIndexOutOfBoundsException: 100  
       at Test.main(Test.java:4)
1
2
3
4
5
抛出了 java.lang.ArrayIndexOutOfBoundsException 异常. 使用数组一定要下标谨防越界.
代码示例:遍历数组
所谓 “遍历” 是指将数组中的所有元素都访问一遍, 不重不漏. 通常需要搭配循环语句.

int  [ ] arr={1,2,3};
for(int i=0;i<arr.length;i++){
	System.out.println(arr[i]);
	}
	
// 执行结果 
1
2
3
1
2
3
4
5
6
7
8
9
代码示例：使用for-each遍历数组

int  [ ] arr={1,2,3};
for(int x:arr){
System.out.println(x);
}

//执行结果
1
2
3
1
2
3
4
5
6
7
8
9
for-each是for循环的另外一种表达形式，能更方便的完成对数组的遍历，可以避免循环条件和更新语句写错。
